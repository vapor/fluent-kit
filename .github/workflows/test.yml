name: test
on:
  pull_request:
  push: 
    branches: 
      - main
env:
  LOG_LEVEL: info

jobs:

  dependents:
    runs-on: ubuntu-latest
    services:
      mysql-a:
        image: mysql:latest
        env: 
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
          MYSQL_DATABASE: vapor_database
      mysql-b:
        image: mysql:latest
        env: 
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
          MYSQL_DATABASE: vapor_database
      postgres-a:
        image: postgres:latest
        env:
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: vapor_database
      postgres-b:
        image: postgres:latest
        env: 
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: vapor_database
      mongo-a:
        image: mongo:latest
      mongo-b:
        image: mongo:latest
    container: swift:5.4-focal
    strategy:
      fail-fast: false
      matrix:
        dependent:
          - fluent-sqlite-driver
          - fluent-postgres-driver
          - fluent-mysql-driver
          - fluent-mongo-driver
    steps:
      - name: Install SQLite dependencies
        run: apt-get -q update && apt-get -q install -y libsqlite3-dev
        if: ${{ contains(matrix.dependent, 'sqlite') }}
      - name: Check out package
        uses: actions/checkout@v2
        with:
          path: package
      - name: Check out dependent
        uses: actions/checkout@v2
        with:
          repository: vapor/${{ matrix.dependent }}
          path: dependent
      - name: Use local package
        run: swift package edit fluent-kit --path ../package
        working-directory: dependent
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
        working-directory: dependent
        env:
          POSTGRES_HOSTNAME_A: postgres-a
          POSTGRES_HOSTNAME_B: postgres-b
          MYSQL_HOSTNAME_A: mysql-a
          MYSQL_HOSTNAME_B: mysql-b
          MONGO_HOSTNAME_A: mongo-a
          MONGO_HOSTNAME_B: mongo-b

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - swift:5.2-bionic
          - swift:5.2-focal
          - swift:5.2-amazonlinux2
          - swift:5.3-bionic
          - swift:5.3-focal
          - swift:5.3-amazonlinux2
          - swift:5.4-bionic
          - swift:5.4-focal
          - swift:5.4-amazonlinux2
          - swiftlang/swift:nightly-5.5-bionic
          - swiftlang/swift:nightly-5.5-focal
          - swiftlang/swift:nightly-5.5-amazonlinux2
    container: ${{ matrix.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread

  macos:
    strategy:
      fail-fast: false
      matrix:
        xcode:
          - latest
          - latest-stable
        macos:
          - latest
          #- 11.0
    runs-on: macos-${{ matrix.macos }}
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with: 
          xcode-version: ${{ matrix.xcode }}
      - name: Check out package
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
